[gd_resource type="Shader" format=3 uid="uid://b5kjxi1rld8lg"]

[resource]
code = "shader_type spatial;
render_mode unshaded;

uniform float num_leds;
uniform sampler3D color3D;

varying vec4 color;

void vertex() {
	ivec3 pos = ivec3(int(INSTANCE_CUSTOM.x), int(INSTANCE_CUSTOM.y),int(INSTANCE_CUSTOM.z));
	color = texelFetch(color3D, pos, 0);
	
	//color = texture(color_texture, pixel_pos);
	//color = texelFetch(color2D, texel_pos, 0);
	//COLOR = vec4(float(INSTANCE_ID)/num_leds);


}

void fragment() {
	ALBEDO = color.rgb;
	ALPHA = color.a;
}

//void light() {
	// Called for every pixel for every light affecting the material.
	// Uncomment to replace the default light processing function with this one.
//}
"
